name: build CI

on: [push, pull_request]


jobs:
  test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8"]

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip And setuptools
        run: python -m pip install -U pip setuptools pipenv

      - name: Checkout workspace
        uses: actions/checkout@v2

      - name: Install Poetry
        shell: bash
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      
      - name: Test Poetry Install
        run: poetry --version

      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project false

      - name: Install Python Dependencies
        run: poetry install -E testing

      - name: Run complete test suite
        run: poetry run py.test -s -vvv --flake8 packratt/


  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' &&
      (startsWith(github.event.ref, 'refs/tags') ||
       github.event.ref == 'refs/heads/master')
    steps:
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install latest setuptools, wheel, pip
        run: python3 -m pip install -U pip setuptools wheel

      - name: Install dephell
        run: curl -L dephell.org/install | python3

      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Convert pyproject.toml to setup.py
        run: dephell deps convert --from=pyproject.toml --to=setup.py

      - name: Build distributions
        run: python setup.py sdist bdist_wheel

      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.test_pypi_token }}
          repository_url: https://test.pypi.org/legacy/
        continue-on-error: true

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        with:
          user: __token__
          password: ${{ secrets.pypi_token }}
